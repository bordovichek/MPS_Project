version: '3.8'

services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  django:
    build: .
    command: /app/gunicorn_start.sh
    volumes:
      - .:/app
      - static_volume:/app/staticfiles_collected
      - media_volume:/app/media
    expose:
      - 8000
    environment:
      DJANGO_DEBUG: ${DJANGO_DEBUG:-True}
      SECRET_KEY: ${SECRET_KEY}
      DJANGO_ALLOWED_HOSTS: mpsproject.ru
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/vol/web/static:ro
      - media_volume:/vol/web/media:ro
      - certbot_webroot:/var/www/certbot:ro
      - certbot_certs:/etc/letsencrypt:rw
    depends_on:
      - django

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot_webroot:/var/www/certbot:rw
      - certbot_certs:/etc/letsencrypt:rw
    entrypoint: [ "tail", "-f", "/dev/null" ]
volumes:
  postgres_data:
  static_volume:
  media_volume:
  certbot_webroot:
  certbot_certs: